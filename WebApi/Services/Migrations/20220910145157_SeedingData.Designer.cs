// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Services;

namespace Services.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220910145157_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.DAL.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("WebApi.DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TVs"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sound Systems"
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebApi.DAL.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiscountApplied")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("WebApi.DAL.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "50 inch Model 32A",
                            DiscountPercentage = 5,
                            ImageUrl = "https://images.philips.com/is/image/PhilipsConsumer/50PUT6604_56-IMS-en_SA?$jpglarge$&wid=960",
                            Name = "Samsung TV",
                            Price = 4500f
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "49 inch Model 32A",
                            DiscountPercentage = 5,
                            ImageUrl = "https://www.lg.com/eg_en/images/tvs/32lk310/gallery/large01.jpg",
                            Name = "LG TV",
                            Price = 6000f
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "32 inch Model 32A",
                            DiscountPercentage = 5,
                            ImageUrl = "https://www.lg.com/eg_en/images/tvs/md07527560/gallery/d-01.jpg",
                            Name = "LG TV",
                            Price = 3500f
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "11th Generation Intel Core i7-1165G7 Processor (12MB Cache, up to 4.7 GHz) 512GB M.2 PCIe NVMe Solid State Drive  8GB, 8GBx1, DDR4, 2666MHz  15.6-inch FHD (1920 x 1080) Anti-glare LED Backlight Non-Touch Narrow Border WVA Display",
                            DiscountPercentage = 15,
                            ImageUrl = "https://m.media-amazon.com/images/I/71FST4IHj+L._AC_SX679_.jpg",
                            Name = "Dell Vostro 3510 Laptop 15.6 FHD",
                            Price = 16450f
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = " 15-EC1046NR AMD Ryzen 7 4800H -RAM 12GB -512 SDD- GTX1660 TI 6G - OS WIN10 -Display 15,6 Personal Computer",
                            DiscountPercentage = 10,
                            ImageUrl = "https://m.media-amazon.com/images/I/71mzCXW2j8L._AC_SX679_.jpg",
                            Name = "Hp Gaming Pavilion 15-EC1046NR",
                            Price = 19888f
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Party Speaker with Light Effects Full Panel - Black Unique and fashionable design.Country of Origin: China Made of is high quality Compatible with multiple devices and easy to use Unique and fashionable design. ",
                            DiscountPercentage = 20,
                            ImageUrl = "https://m.media-amazon.com/images/I/31ct5JPuy5S._AC_SY1000_.jpg",
                            Name = "JBL Partybox 1000 Bluetooth",
                            Price = 29400f
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApi.DAL.Models.CartItem", b =>
                {
                    b.HasOne("WebApi.DAL.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebApi.DAL.Models.Order", b =>
                {
                    b.HasOne("WebApi.DAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.DAL.Models.OrderItem", b =>
                {
                    b.HasOne("WebApi.DAL.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebApi.DAL.Models.Product", b =>
                {
                    b.HasOne("WebApi.DAL.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApi.DAL.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
